#version 430

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0) uniform isampler2D texCamera;
layout (binding = 1) uniform isampler2D texRendered;

layout (binding = 0, r32ui) uniform writeonly restrict uimage2D imgResultDifference;
layout (binding = 1, r8ui)  uniform writeonly restrict uimage2D imgResultUnion;
layout (binding = 2, r8ui)  uniform writeonly restrict uimage2D imgResultIntersection;

void main() {
	ivec2 posGlobal = ivec2(gl_GlobalInvocationID.xy);
	vec2  posScreen = vec2(posGlobal) / vec2(320*8, 240*8);

	ivec4 renderedSample = texture(texRendered, posScreen);
	ivec4 cameraSample   = texture(texCamera,   posScreen);
	
	imageStore(imgResultDifference, posGlobal,
			   abs(cameraSample-renderedSample)<<7);
}
