#version 430

layout (local_size_x = 320, local_size_y = 3) in;

layout (binding = 0, r32ui) uniform restrict uimage2D imgResultDifference;
layout (binding = 1, rg8ui) uniform restrict uimage2D imgResultUnion;
layout (binding = 2, rg8ui) uniform restrict uimage2D imgResultIntersection;

shared uint work_memory[320*3];

void main() {
	ivec2 posGlobal = ivec2(gl_GlobalInvocationID.xy);

	// initialize work memory by texture lookup
	work_memory[gl_LocalInvocationID.x + 320*gl_LocalInvocationID.y] =
		imageLoad(imgResultDifference, posGlobal);

	// actual horizontal reduction loop
}
